{"version":3,"sources":["services/interceptor.js","component/areaOfTriangle.js","component/map.js","App.js","index.js"],"names":["makeRequest","instance","axios","create","headers","interceptors","request","use","config","constants","API_KEY","ZOMATO","areaOfTriangleStraightLines","findArea","objects","map","getObjects","homeToNearestPoint","getGeometry","distance","nearestToFarthestPoint","farthestToNearestPoint","Math","ceil","surface","data","setState","areaOfTriangleOfStaright","sqrt","timeTakenToCross","state","this","props","Map","className","onClick","React","Component","platform","apikey","HERE_MAP","lat","lng","zoom","restaurantList","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","drawMap","window","H","service","Platform","defaultLayers","createDefaultLayers","document","getElementById","raster","normal","center","events","mapevents","MapEvents","Behavior","getRestaurantDetails","forEach","parseFloat","marker","Marker","addObject","listOfRestaurant","filteredResult","CurrentState","push","min","_","minBy","restaurant","location","max","maxBy","length","addMarkers","url","BASE_URL","END_POINTS","GET_RESTATRUANT_DETAILS","get","then","res","status","nearby_restaurants","getRequiredRestaurant","id","style","width","height","background","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.734d3ccd.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport constants from \"../../src/constans.json\";\r\n\r\nconst makeRequest = () => {\r\n    const defaultOptions = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n    }\r\n\r\n    // Creating instance\r\n    let instance = axios.create(defaultOptions)\r\n\r\n    // Set the AUTH token for any request\r\n    instance.interceptors.request.use(function(config) {\r\n        config.headers['user-key'] = constants.API_KEY.ZOMATO\r\n        return config\r\n    })\r\n    return instance\r\n}\r\n\r\nexport default makeRequest()\r\n","import React from \"react\";\r\nimport areaOfTriangle from \"../component/areaOfTriangle.css\";\r\n\r\nexport default class areaOfTriangleStraightLines extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.map = null;\r\n    this.homeToNearestPoint = null;\r\n    this.nearestToFarthestPoint = null;\r\n    this.farthestToNearestPoint = null;\r\n\r\n    this.state = {\r\n      areaOfTriangleOfStaright: null,\r\n      timeTakenToCross: null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.map = this.props.Map;\r\n  }\r\n\r\n  findArea = () => {\r\n    let objects = this.map.getObjects();\r\n    // Distance Between Point In Meter\r\n    this.homeToNearestPoint = objects[0]\r\n      .getGeometry()\r\n      .distance(objects[1].getGeometry());\r\n    this.nearestToFarthestPoint = objects[1]\r\n      .getGeometry()\r\n      .distance(objects[2].getGeometry());\r\n    this.farthestToNearestPoint = objects[2]\r\n      .getGeometry()\r\n      .distance(objects[0].getGeometry());\r\n\r\n    // Meter To Km\r\n    this.homeToNearestPoint = Math.ceil(this.homeToNearestPoint / 1000);\r\n    this.nearestToFarthestPoint = Math.ceil(this.nearestToFarthestPoint / 1000);\r\n    this.farthestToNearestPoint = Math.ceil(this.farthestToNearestPoint / 1000);\r\n\r\n    let distance =\r\n      this.homeToNearestPoint +\r\n      this.nearestToFarthestPoint +\r\n      this.farthestToNearestPoint;\r\n    let surface = distance / 2;\r\n    let data =\r\n      surface *\r\n      ((surface - this.homeToNearestPoint) *\r\n        (surface - this.nearestToFarthestPoint) *\r\n        (surface - this.farthestToNearestPoint));\r\n\r\n\r\n    this.setState({\r\n      areaOfTriangleOfStaright: Math.sqrt(data),\r\n      timeTakenToCross: distance / (5 * 3.6)\r\n    })\r\n\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"grid\">\r\n        <button className=\"button\" onClick={this.findArea}>\r\n          Find Area Of Triangle With Straight Lines\r\n        </button>\r\n        <div>\r\n          <span>Area Of Triangle Whose Edges are Straight : {this.state.areaOfTriangleOfStaright}</span><br />\r\n          <span>Time Taken To Walk : {this.state.timeTakenToCross}</span><br />\r\n          <span>\r\n            Area Of Triangle Whose Edges are Actual Car Driving Distance: {}\r\n          </span><br />\r\n          <span>Time Taken To Walk : {}</span><br />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport constants from \"../../src/constans.json\";\r\nimport axios from \"../../src/services/interceptor\";\r\nimport AreaOfTriangle from \"../../src/component/areaOfTriangle\";\r\nimport _ from \"lodash\";\r\n\r\nexport default class Map extends Component {\r\n  constructor() {\r\n    super();\r\n    this.platform = null;\r\n    this.map = null;\r\n\r\n\r\n    this.state = {\r\n      apikey: constants.API_KEY.HERE_MAP,\r\n      lat: 8.22357,\r\n      lng: 77.352112,\r\n      zoom: 8,\r\n      restaurantList: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Getting Current Latitude and Longitude\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n\r\n        if (position && position.coords) {\r\n          this.setState({\r\n            lat: position.coords.latitude,\r\n            lng: position.coords.longitude,\r\n          });\r\n\r\n        }\r\n        this.drawMap();\r\n      });\r\n    } else {\r\n      this.drawMap();\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  drawMap() {\r\n\r\n    this.platform = new window.H.service.Platform(this.state);\r\n    var defaultLayers = this.platform.createDefaultLayers();\r\n\r\n    // Instantiate (and display) a map object:\r\n    this.map = new window.H.Map(\r\n      document.getElementById(\"map\"),\r\n      defaultLayers.raster.normal.map,\r\n      {\r\n        zoom: this.state.zoom,\r\n        center: {\r\n          lat: this.state.lat,\r\n          lng: this.state.lng,\r\n        },\r\n      }\r\n    );\r\n\r\n    // For Interactive Maps\r\n    var events = new window.H.mapevents.MapEvents(this.map);\r\n    new window.H.mapevents.Behavior(events);\r\n\r\n    this.getRestaurantDetails();\r\n  }\r\n\r\n  addMarkers() {\r\n    if (this.state.restaurantList) {\r\n      this.state.restaurantList.forEach((data) => {\r\n        let latitude =\r\n          data.latitude && data.latitude === \"0.0000000000\"\r\n            ? this.state.lat + 0.5\r\n            : parseFloat(data.latitude);\r\n        let longitude =\r\n          data.longitude && data.longitude === \"0.0000000000\"\r\n            ? this.state.lng + 0.5\r\n            : parseFloat(data.longitude);\r\n\r\n        var marker = new window.H.map.Marker({\r\n          lat: latitude,\r\n          lng: longitude,\r\n        });\r\n        this.map.addObject(marker);\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  getRequiredRestaurant(listOfRestaurant) {\r\n    let filteredResult = [];\r\n\r\n    let CurrentState = {\r\n      latitude: this.state.lat,\r\n      longitude: this.state.lng,\r\n    }\r\n    filteredResult.push(CurrentState);\r\n\r\n\r\n\r\n    // Getting Nearest\r\n    let min = _.minBy(listOfRestaurant, function (data) {\r\n      return (\r\n        data.restaurant.location.latitude && data.restaurant.location.longitude\r\n      );\r\n    });\r\n\r\n    filteredResult.push(min.restaurant.location);\r\n\r\n\r\n    //Getting Farthest\r\n    let max = _.maxBy(listOfRestaurant, function (data) {\r\n      return (\r\n        data.restaurant.location.latitude && data.restaurant.location.longitude\r\n      );\r\n    });\r\n\r\n    filteredResult.push(max.restaurant.location);\r\n\r\n\r\n\r\n\r\n    this.setState({\r\n      restaurantList: filteredResult,\r\n    });\r\n\r\n    if (filteredResult.length) {\r\n      this.addMarkers();\r\n    }\r\n  }\r\n\r\n  // Getting NearBy Restaurant Details\r\n  getRestaurantDetails() {\r\n    let url =\r\n      constants.BASE_URL +\r\n      constants.END_POINTS.GET_RESTATRUANT_DETAILS +\r\n      \"?lat=\" +\r\n      this.state.lat +\r\n      \"&lon=\" +\r\n      this.state.lng;\r\n    axios.get(url).then((res) => {\r\n      if (\r\n        res &&\r\n        res.status === 200 &&\r\n        res.data &&\r\n        res.data.nearby_restaurants &&\r\n        res.data.nearby_restaurants.length\r\n      ) {\r\n        let listOfRestaurant = res.data.nearby_restaurants;\r\n        this.getRequiredRestaurant(listOfRestaurant);\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div\r\n          id=\"map\"\r\n          style={{ width: \"100%\", height: \"500px\", background: \"grey\" }}\r\n        />\r\n        {this.map ? <AreaOfTriangle Map={this.map}></AreaOfTriangle> : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport Map from '../src/component/map';\n\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n              <Map></Map>               \n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n      <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}