{"version":3,"sources":["services/interceptor.js","component/areaOfTriangleWithStraightEdge.js","component/areaOfTriangleWithCurvedEdge.js","component/map.js","App.js","index.js","services/mTokm.js"],"names":["makeRequest","instance","axios","create","headers","interceptors","request","use","config","constants","API_KEY","ZOMATO","areaOfTriangleStraightLines","findArea","objects","map","getObjects","homeToNearestPoint","getGeometry","distance","nearestToFarthestPoint","farthestToNearestPoint","mTokm","semiperimeter","data","setState","areaOfTriangleOfStaright","Math","sqrt","toFixed","timeTakenToCross","viewFlag","state","this","props","Map","className","onClick","React","Component","areaOfTriangleWithCurvedEdge","calculateRoute","restaurantList","router","platform","getRoutingService","routeRequestParams","mode","representation","routeattributes","maneuverattributes","waypoint0","latitude","longitude","waypoint1","waypoint2","waypoint3","onSuccess","onError","result","route","response","addRouteShapeToMap","addSummaryToPanel","summary","timeTaken","Platform","error","alert","polyline","lineString","window","H","geo","LineString","shape","forEach","point","parts","split","pushLatLngAlt","Polyline","style","lineWidth","strokeColor","addObject","getViewModel","setLookAtData","bounds","getBoundingBox","apikey","HERE_MAP","lat","lng","zoom","navigator","geolocation","getCurrentPosition","position","coords","drawMap","service","defaultLayers","createDefaultLayers","document","getElementById","raster","normal","center","events","mapevents","MapEvents","Behavior","ui","UI","createDefault","getRestaurantDetails","parseFloat","svgMarkup","label","icon","Icon","marker","Marker","listOfRestaurant","filteredResult","CurrentState","push","min","_","minBy","restaurant","location","max","maxBy","length","addMarkers","url","BASE_URL","END_POINTS","GET_RESTATRUANT_DETAILS","get","then","res","status","nearby_restaurants","getRequiredRestaurant","id","width","height","background","App","ReactDOM","render","module","exports","meterValue","kmValue","ceil"],"mappings":"6OAqBeA,EAlBK,WAChB,IAOIC,EAAWC,IAAMC,OAPE,CACnBC,QAAS,CACL,eAAgB,sBAYxB,OAJAH,EAASI,aAAaC,QAAQC,KAAI,SAASC,GAEvC,OADAA,EAAOJ,QAAQ,YAAcK,EAAUC,QAAQC,OACxCH,KAEJP,EAGID,G,uBClBMY,E,kDACnB,aAAe,IAAD,8BACZ,gBAiBFC,SAAW,WACT,IAAIC,EAAU,EAAKC,IAAIC,aAEvB,EAAKC,mBAAqBH,EAAQ,GAC/BI,cACAC,SAASL,EAAQ,GAAGI,eACvB,EAAKE,uBAAyBN,EAAQ,GACnCI,cACAC,SAASL,EAAQ,GAAGI,eACvB,EAAKG,uBAAyBP,EAAQ,GACnCI,cACAC,SAASL,EAAQ,GAAGI,eAGvB,EAAKD,mBAAqBK,IAAM,EAAKL,oBACrC,EAAKG,uBAAyBE,IAAM,EAAKF,wBACzC,EAAKC,uBAAyBC,IAAM,EAAKD,wBAEzC,IAAIF,EACF,EAAKF,mBACL,EAAKG,uBACL,EAAKC,uBAEHE,EAAgBJ,EAAW,EAC3BK,EACFD,IACEA,EAAgB,EAAKN,qBACpBM,EAAgB,EAAKH,yBACrBG,EAAgB,EAAKF,yBAG1B,EAAKI,SAAS,CACZC,yBAA0BC,KAAKC,KAAKJ,GAAMK,QAAQ,GAClDC,iBAAkBX,EAJO,EAKzBY,UAAU,KAlDZ,EAAKhB,IAAM,KACX,EAAKE,mBAAqB,KAC1B,EAAKG,uBAAyB,KAC9B,EAAKC,uBAAyB,KAE9B,EAAKW,MAAQ,CACXN,yBAA0B,KAC1BI,iBAAkB,KAClBC,UAAU,GAVA,E,gEAeZE,KAAKlB,IAAMkB,KAAKC,MAAMC,M,+BA0CtB,OACE,yBAAKC,UAAU,QACb,4BAAQA,UAAU,SAASC,QAASJ,KAAKpB,UAAzC,yBAGCoB,KAAKD,MAAMD,SACV,6BACE,oDACsBE,KAAKD,MAAMN,yBADjC,OAGA,6BACA,sDAA4BO,KAAKD,MAAMF,iBAAvC,OACA,8BAEA,U,GAxE6CQ,IAAMC,WCC1CC,E,kDACnB,aAAe,IAAD,8BACZ,gBAkBFC,eAAiB,WACf,GAAI,EAAKC,eAAgB,CACvB,IAAIC,EAAS,EAAKC,SAASC,oBACzBC,EAAqB,CACnBC,KAAM,eACNC,eAAgB,UAChBC,gBAAiB,+BACjBC,mBAAoB,mBACpBC,UACE,EAAKT,eAAe,GAAGU,SACvB,IACA,EAAKV,eAAe,GAAGW,UACzBC,UACE,EAAKZ,eAAe,GAAGU,SACvB,IACA,EAAKV,eAAe,GAAGW,UACzBE,UACE,EAAKb,eAAe,GAAGU,SACvB,IACA,EAAKV,eAAe,GAAGW,UACzBG,UACE,EAAKd,eAAe,GAAGU,SACvB,IACA,EAAKV,eAAe,GAAGW,WAG7BV,EAAOF,eAAeK,EAAoB,EAAKW,UAAW,EAAKC,WA7CrD,EAuFdD,UAAY,SAACE,GACX,IAAIC,EAAQD,EAAOE,SAASD,MAAM,GAClC,EAAKE,mBAAmBF,GACxB,EAAKG,kBAAkBH,EAAMI,UAxF7B,EAAKjD,IAAM,KACX,EAAK2B,eAAiB,KACtB,EAAKE,SAAW,KAEhB,EAAKZ,MAAQ,CACXb,SAAU,KACV8C,UAAW,KACXlC,UAAU,GATA,E,gEAcZE,KAAKlB,IAAMkB,KAAKC,MAAMC,IACtBF,KAAKS,eAAiBT,KAAKC,MAAMQ,eACjCT,KAAKW,SAAWX,KAAKC,MAAMgC,W,8BAiCrBC,GACNC,MAAM,mC,yCAGWR,GACjB,IAEES,EAFEC,EAAa,IAAIC,OAAOC,EAAEC,IAAIC,WACnBd,EAAMe,MAGVC,SAAQ,SAAUC,GAC3B,IAAIC,EAAQD,EAAME,MAAM,KACxBT,EAAWU,cAAcF,EAAM,GAAIA,EAAM,OAG3CT,EAAW,IAAIE,OAAOC,EAAEzD,IAAIkE,SAASX,EAAY,CAC/CY,MAAO,CACLC,UAAW,EACXC,YAAa,4BAIjBnD,KAAKlB,IAAIsE,UAAUhB,GAEnBpC,KAAKlB,IAAIuE,eAAeC,cAAc,CACpCC,OAAQnB,EAASoB,qB,wCAIHzB,GAChB,IACI7C,EAAWG,IAAM0C,EAAQ7C,UAC7Bc,KAAKR,SAAS,CACZN,SAAUA,EACV8C,UAAW9C,EAJc,EAKzBY,UAAU,M,+BAWZ,OACE,yBAAKK,UAAU,QACb,4BAAQA,UAAU,SAASC,QAASJ,KAAKQ,gBAAzC,qEAGCR,KAAKD,MAAMD,SACV,6BACE,+DAAqCE,KAAKD,MAAMb,SAAhD,OACA,6BACA,sDAA4Bc,KAAKD,MAAMiC,UAAvC,QAEA,U,GA1G8C3B,IAAMC,W,gBCI3CJ,E,kDACnB,aAAe,IAAD,8BACZ,gBACKS,SAAW,KAChB,EAAK7B,IAAM,KACX,EAAKiD,QAAU,KAEf,EAAKhC,MAAQ,CACX0D,OAAQjF,EAAUC,QAAQiF,SAC1BC,IAAK,QACLC,IAAK,UACLC,KAAM,GACNpD,eAAgB,IAXN,E,gEAeO,IAAD,OAEdqD,UAAUC,YACZD,UAAUC,YAAYC,oBAAmB,SAACC,GACpCA,GAAYA,EAASC,QACvB,EAAK1E,SAAS,CACZmE,IAAKM,EAASC,OAAO/C,SACrByC,IAAKK,EAASC,OAAO9C,YAGzB,EAAK+C,aAGPnE,KAAKmE,Y,gCAKPnE,KAAKW,SAAW,IAAI2B,OAAOC,EAAE6B,QAAQnC,SAASjC,KAAKD,OACnD,IAAIsE,EAAgBrE,KAAKW,SAAS2D,sBAGlCtE,KAAKlB,IAAM,IAAIwD,OAAOC,EAAErC,IACtBqE,SAASC,eAAe,OACxBH,EAAcI,OAAOC,OAAO5F,IAC5B,CACE+E,KAAM7D,KAAKD,MAAM8D,KACjBc,OAAQ,CACNhB,IAAK3D,KAAKD,MAAM4D,IAChBC,IAAK5D,KAAKD,MAAM6D,OAMtB,IAAIgB,EAAS,IAAItC,OAAOC,EAAEsC,UAAUC,UAAU9E,KAAKlB,KACnD,IAAIwD,OAAOC,EAAEsC,UAAUE,SAASH,GAChCtC,OAAOC,EAAEyC,GAAGC,GAAGC,cAAclF,KAAKlB,IAAKuF,GACvCrE,KAAKmF,yB,mCAIO,IAAD,OACPnF,KAAKD,MAAMU,gBACbT,KAAKD,MAAMU,eAAekC,SAAQ,SAACpD,GACjC,IAAI4B,EAAWiE,WAAW7F,EAAK4B,UAC3BC,EAAYgE,WAAW7F,EAAK6B,WAE5BiE,EACF,yPAMA9F,EAAK+F,MACL,gBAGEC,EAAO,IAAIjD,OAAOC,EAAEzD,IAAI0G,KAAKH,GAC/BnB,EAAS,CAAEP,IAAKxC,EAAUyC,IAAKxC,GAC/BqE,EAAS,IAAInD,OAAOC,EAAEzD,IAAI4G,OAAOxB,EAAQ,CAAEqB,KAAMA,IACnD,EAAKzG,IAAIsE,UAAUqC,Q,4CAMHE,GACpB,IAAIC,EAAiB,GAEjBC,EAAe,CACjB1E,SAAUnB,KAAKD,MAAM4D,IACrBvC,UAAWpB,KAAKD,MAAM6D,IACtB0B,MAAO,KAGTM,EAAeE,KAAKD,GAGpB,IAAIE,EAAMC,IAAEC,MAAMN,GAAkB,SAAUpG,GAC5C,GACwC,iBAAtCA,EAAK2G,WAAWC,SAAShF,UACc,iBAAvC5B,EAAK2G,WAAWC,SAAS/E,UAEzB,OACE7B,EAAK2G,WAAWC,SAAShF,UACzB5B,EAAK2G,WAAWC,SAAS/E,aAK3B2E,IACFA,EAAIG,WAAWC,SAASb,MAAQ,IAChCM,EAAeE,KAAKC,EAAIG,WAAWC,WAIrC,IAAIC,EAAMJ,IAAEK,MAAMV,GAAkB,SAAUpG,GAC5C,GACwC,iBAAtCA,EAAK2G,WAAWC,SAAShF,UACc,iBAAvC5B,EAAK2G,WAAWC,SAAS/E,UAEzB,OACE7B,EAAK2G,WAAWC,SAAShF,UACzB5B,EAAK2G,WAAWC,SAAS/E,aAK3BgF,IACFA,EAAIF,WAAWC,SAASb,MAAQ,IAChCM,EAAeE,KAAKM,EAAIF,WAAWC,WAErCnG,KAAKR,SAAS,CACZiB,eAAgBmF,IAGdA,EAAeU,QACjBtG,KAAKuG,e,6CAKe,IAAD,OACjBC,EACFhI,EAAUiI,SACVjI,EAAUkI,WAAWC,wBACrB,QACA3G,KAAKD,MAAM4D,IACX,QACA3D,KAAKD,MAAM6D,IACb3F,EAAM2I,IAAIJ,GAAKK,MAAK,SAACC,GACnB,GACEA,GACe,MAAfA,EAAIC,QACJD,EAAIvH,MACJuH,EAAIvH,KAAKyH,oBACTF,EAAIvH,KAAKyH,mBAAmBV,OAC5B,CACA,IAAIX,EAAmBmB,EAAIvH,KAAKyH,mBAChC,EAAKC,sBAAsBtB,S,+BAM/B,OACE,6BACE,yBACEuB,GAAG,MACHjE,MAAO,CAAEkE,MAAO,OAAQC,OAAQ,QAASC,WAAY,UAEtDrH,KAAKlB,IACJ,kBAAC,EAAD,CACEoB,IAAKF,KAAKlB,MAEV,KACHkB,KAAKlB,IACJ,kBAAC,EAAD,CACEoB,IAAKF,KAAKlB,IACVmD,SAAUjC,KAAKW,SACfF,eAAgBT,KAAKD,MAAMU,iBAE3B,U,GApLqBH,aCMlBgH,E,uKARP,OACI,yBAAKnH,UAAU,OACb,kBAAC,EAAD,W,GAJIG,aCClBiH,IAASC,OACH,kBAAC,EAAD,MACJjD,SAASC,eAAe,U,kRCF1BiD,EAAOC,QALO,SAACC,GACb,IAAIC,EAAUD,EAAa,IAC3B,OAAOjI,KAAKmI,KAAKD,K","file":"static/js/main.3939c648.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport constants from \"../../src/constans.json\";\r\n\r\nconst makeRequest = () => {\r\n    const defaultOptions = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n    }\r\n\r\n    // Creating instance\r\n    let instance = axios.create(defaultOptions)\r\n\r\n    // Set the AUTH token for any request\r\n    instance.interceptors.request.use(function(config) {\r\n        config.headers['user-key'] = constants.API_KEY.ZOMATO\r\n        return config\r\n    })\r\n    return instance\r\n}\r\n\r\nexport default makeRequest()\r\n","import React from \"react\";\r\nimport areaOfTriangle from \"../component/areaOfTriangle.css\";\r\nimport mTokm from \"../../src/services/mTokm\";\r\nexport default class areaOfTriangleStraightLines extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.map = null;\r\n    this.homeToNearestPoint = null;\r\n    this.nearestToFarthestPoint = null;\r\n    this.farthestToNearestPoint = null;\r\n\r\n    this.state = {\r\n      areaOfTriangleOfStaright: null,\r\n      timeTakenToCross: null,\r\n      viewFlag: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.map = this.props.Map;\r\n  }\r\n\r\n  findArea = () => {\r\n    let objects = this.map.getObjects();\r\n    // Distance Between Point In Meter\r\n    this.homeToNearestPoint = objects[0]\r\n      .getGeometry()\r\n      .distance(objects[1].getGeometry());\r\n    this.nearestToFarthestPoint = objects[1]\r\n      .getGeometry()\r\n      .distance(objects[2].getGeometry());\r\n    this.farthestToNearestPoint = objects[2]\r\n      .getGeometry()\r\n      .distance(objects[0].getGeometry());\r\n\r\n    // Meter To Km\r\n    this.homeToNearestPoint = mTokm(this.homeToNearestPoint);\r\n    this.nearestToFarthestPoint = mTokm(this.nearestToFarthestPoint);\r\n    this.farthestToNearestPoint = mTokm(this.farthestToNearestPoint);\r\n\r\n    let distance =\r\n      this.homeToNearestPoint +\r\n      this.nearestToFarthestPoint +\r\n      this.farthestToNearestPoint;\r\n\r\n    let semiperimeter = distance / 2;\r\n    let data =\r\n      semiperimeter *\r\n      ((semiperimeter - this.homeToNearestPoint) *\r\n        (semiperimeter - this.nearestToFarthestPoint) *\r\n        (semiperimeter - this.farthestToNearestPoint));\r\n    let standardWalkingSpeed = 5;\r\n\r\n    this.setState({\r\n      areaOfTriangleOfStaright: Math.sqrt(data).toFixed(2),\r\n      timeTakenToCross: distance / standardWalkingSpeed,\r\n      viewFlag: true,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"grid\">\r\n        <button className=\"button\" onClick={this.findArea}>\r\n          Find Area Of Triangle\r\n        </button>\r\n        {this.state.viewFlag ? (\r\n          <div>\r\n            <span>\r\n              Area Of Triangle : {this.state.areaOfTriangleOfStaright} Km\r\n            </span>\r\n            <br />\r\n            <span>Time Taken To Walk : {this.state.timeTakenToCross} Hr</span>\r\n            <br />\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport areaOfTriangle from \"../component/areaOfTriangle.css\";\r\nimport mTokm from \"../../src/services/mTokm\";\r\n\r\nexport default class areaOfTriangleWithCurvedEdge extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.map = null;\r\n    this.restaurantList = null;\r\n    this.platform = null;\r\n\r\n    this.state = {\r\n      distance: null,\r\n      timeTaken: null,\r\n      viewFlag: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.map = this.props.Map;\r\n    this.restaurantList = this.props.restaurantList;\r\n    this.platform = this.props.Platform;\r\n  }\r\n\r\n  calculateRoute = () => {\r\n    if (this.restaurantList) {\r\n      var router = this.platform.getRoutingService(),\r\n        routeRequestParams = {\r\n          mode: \"shortest;car\",\r\n          representation: \"display\",\r\n          routeattributes: \"waypoints,summary,shape,legs\",\r\n          maneuverattributes: \"direction,action\",\r\n          waypoint0:\r\n            this.restaurantList[0].latitude +\r\n            \",\" +\r\n            this.restaurantList[0].longitude,\r\n          waypoint1:\r\n            this.restaurantList[1].latitude +\r\n            \",\" +\r\n            this.restaurantList[1].longitude,\r\n          waypoint2:\r\n            this.restaurantList[2].latitude +\r\n            \",\" +\r\n            this.restaurantList[2].longitude,\r\n          waypoint3:\r\n            this.restaurantList[0].latitude +\r\n            \",\" +\r\n            this.restaurantList[0].longitude,\r\n        };\r\n\r\n      router.calculateRoute(routeRequestParams, this.onSuccess, this.onError);\r\n    }\r\n  };\r\n\r\n  onError(error) {\r\n    alert(\"Can't reach the remote server\");\r\n  }\r\n\r\n  addRouteShapeToMap(route) {\r\n    var lineString = new window.H.geo.LineString(),\r\n      routeShape = route.shape,\r\n      polyline;\r\n\r\n    routeShape.forEach(function (point) {\r\n      var parts = point.split(\",\");\r\n      lineString.pushLatLngAlt(parts[0], parts[1]);\r\n    });\r\n\r\n    polyline = new window.H.map.Polyline(lineString, {\r\n      style: {\r\n        lineWidth: 4,\r\n        strokeColor: \"rgba(0, 128, 255, 0.7)\",\r\n      },\r\n    });\r\n    // Add the polyline to the map\r\n    this.map.addObject(polyline);\r\n    // And zoom to its bounding rectangle\r\n    this.map.getViewModel().setLookAtData({\r\n      bounds: polyline.getBoundingBox(),\r\n    });\r\n  }\r\n\r\n  addSummaryToPanel(summary) {\r\n    let standardWalkingSpeed = 5;\r\n    let distance = mTokm(summary.distance);\r\n    this.setState({\r\n      distance: distance,\r\n      timeTaken: distance / standardWalkingSpeed,\r\n      viewFlag: true,\r\n    });\r\n  }\r\n\r\n  onSuccess = (result) => {\r\n    var route = result.response.route[0];\r\n    this.addRouteShapeToMap(route);\r\n    this.addSummaryToPanel(route.summary);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"grid\">\r\n        <button className=\"button\" onClick={this.calculateRoute}>\r\n          Find Area Of Triangle Whose Edges are Actual Car Driving Distance\r\n        </button>\r\n        {this.state.viewFlag ? (\r\n          <div>\r\n            <span>Distance Between the Points : {this.state.distance} Km</span>\r\n            <br />\r\n            <span>Time Taken To Walk : {this.state.timeTaken} Hr</span>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport constants from \"../../src/constans.json\";\r\nimport axios from \"../../src/services/interceptor\";\r\nimport AreaOfTriangleWithStraightEdge from \"../../src/component/areaOfTriangleWithStraightEdge\";\r\nimport AreaOfTriangleWithCurvedEdge from \"../../src/component/areaOfTriangleWithCurvedEdge\";\r\nimport areaOfTriangle from \"../component/areaOfTriangle.css\";\r\nimport _ from \"lodash\";\r\n\r\nexport default class Map extends Component {\r\n  constructor() {\r\n    super();\r\n    this.platform = null;\r\n    this.map = null;\r\n    this.summary = null;\r\n\r\n    this.state = {\r\n      apikey: constants.API_KEY.HERE_MAP,\r\n      lat: 8.22357,\r\n      lng: 77.352112,\r\n      zoom: 10,\r\n      restaurantList: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Getting Current Latitude and Longitude\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        if (position && position.coords) {\r\n          this.setState({\r\n            lat: position.coords.latitude,\r\n            lng: position.coords.longitude,\r\n          });\r\n        }\r\n        this.drawMap();\r\n      });\r\n    } else {\r\n      this.drawMap();\r\n    }\r\n  }\r\n\r\n  drawMap() {\r\n    this.platform = new window.H.service.Platform(this.state);\r\n    var defaultLayers = this.platform.createDefaultLayers();\r\n\r\n    // Instantiate (and display) a map object:\r\n    this.map = new window.H.Map(\r\n      document.getElementById(\"map\"),\r\n      defaultLayers.raster.normal.map,\r\n      {\r\n        zoom: this.state.zoom,\r\n        center: {\r\n          lat: this.state.lat,\r\n          lng: this.state.lng,\r\n        },\r\n      }\r\n    );\r\n\r\n    // For Interactive Maps\r\n    var events = new window.H.mapevents.MapEvents(this.map);\r\n    new window.H.mapevents.Behavior(events);\r\n    window.H.ui.UI.createDefault(this.map, defaultLayers);\r\n    this.getRestaurantDetails();\r\n  }\r\n\r\n  //adding Custom Markers\r\n  addMarkers() {\r\n    if (this.state.restaurantList) {\r\n      this.state.restaurantList.forEach((data) => {\r\n        let latitude = parseFloat(data.latitude);\r\n        let longitude = parseFloat(data.longitude);\r\n\r\n        var svgMarkup =\r\n          '<svg width=\"24\" height=\"24\" ' +\r\n          'xmlns=\"http://www.w3.org/2000/svg\">' +\r\n          '<rect stroke=\"white\" fill=\"#1ad1ff\" x=\"1\" y=\"1\" width=\"22\" ' +\r\n          'height=\"22\" /><text x=\"12\" y=\"18\" font-size=\"12pt\" ' +\r\n          'font-family=\"Arial\" font-weight=\"bold\" text-anchor=\"middle\" ' +\r\n          'fill=\"white\">' +\r\n          data.label +\r\n          \"</text></svg>\";\r\n\r\n        // Create an icon, an object holding the latitude and longitude, and a marker:\r\n        var icon = new window.H.map.Icon(svgMarkup),\r\n          coords = { lat: latitude, lng: longitude },\r\n          marker = new window.H.map.Marker(coords, { icon: icon });\r\n        this.map.addObject(marker);\r\n      });\r\n    }\r\n  }\r\n\r\n  //Filtering Only Required Details\r\n  getRequiredRestaurant(listOfRestaurant) {\r\n    let filteredResult = [];\r\n\r\n    let CurrentState = {\r\n      latitude: this.state.lat,\r\n      longitude: this.state.lng,\r\n      label: \"H\",\r\n    };\r\n\r\n    filteredResult.push(CurrentState);\r\n\r\n    // Getting Nearest\r\n    let min = _.minBy(listOfRestaurant, function (data) {\r\n      if (\r\n        data.restaurant.location.latitude !== \"0.0000000000\" &&\r\n        data.restaurant.location.longitude !== \"0.0000000000\"\r\n      ) {\r\n        return (\r\n          data.restaurant.location.latitude &&\r\n          data.restaurant.location.longitude\r\n        );\r\n      }\r\n    });\r\n\r\n    if (min) {\r\n      min.restaurant.location.label = \"N\";\r\n      filteredResult.push(min.restaurant.location);\r\n    }\r\n\r\n    //Getting Farthest\r\n    let max = _.maxBy(listOfRestaurant, function (data) {\r\n      if (\r\n        data.restaurant.location.latitude !== \"0.0000000000\" &&\r\n        data.restaurant.location.longitude !== \"0.0000000000\"\r\n      ) {\r\n        return (\r\n          data.restaurant.location.latitude &&\r\n          data.restaurant.location.longitude\r\n        );\r\n      }\r\n    });\r\n\r\n    if (max) {\r\n      max.restaurant.location.label = \"F\";\r\n      filteredResult.push(max.restaurant.location);\r\n    }\r\n    this.setState({\r\n      restaurantList: filteredResult,\r\n    });\r\n\r\n    if (filteredResult.length) {\r\n      this.addMarkers();\r\n    }\r\n  }\r\n\r\n  // Getting NearBy Restaurant Details\r\n  getRestaurantDetails() {\r\n    let url =\r\n      constants.BASE_URL +\r\n      constants.END_POINTS.GET_RESTATRUANT_DETAILS +\r\n      \"?lat=\" +\r\n      this.state.lat +\r\n      \"&lon=\" +\r\n      this.state.lng;\r\n    axios.get(url).then((res) => {\r\n      if (\r\n        res &&\r\n        res.status === 200 &&\r\n        res.data &&\r\n        res.data.nearby_restaurants &&\r\n        res.data.nearby_restaurants.length\r\n      ) {\r\n        let listOfRestaurant = res.data.nearby_restaurants;\r\n        this.getRequiredRestaurant(listOfRestaurant);\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div\r\n          id=\"map\"\r\n          style={{ width: \"100%\", height: \"500px\", background: \"grey\" }}\r\n        />\r\n        {this.map ? (\r\n          <AreaOfTriangleWithStraightEdge\r\n            Map={this.map}\r\n          ></AreaOfTriangleWithStraightEdge>\r\n        ) : null}\r\n        {this.map ? (\r\n          <AreaOfTriangleWithCurvedEdge\r\n            Map={this.map}\r\n            Platform={this.platform}\r\n            restaurantList={this.state.restaurantList}\r\n          ></AreaOfTriangleWithCurvedEdge>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport Map from '../src/component/map';\n\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n              <Map></Map>               \n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n      <App />,\n  document.getElementById('root')\n);\n\n\n","const mTokm = (meterValue) => {\r\n  let kmValue = meterValue / 1000;\r\n  return Math.ceil(kmValue);\r\n};\r\n\r\nmodule.exports = mTokm;\r\n"],"sourceRoot":""}